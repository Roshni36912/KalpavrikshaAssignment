Process 1 (Sorting Process):

#include <stdio.h>
#include <stdlib.h>

void insertionSort(int arr[], int n) 
{
    for (int i = 1; i < n; i++) 
    {
        int key = arr[i];
        int j = i - 1;
        
        while (j >= 0 && arr[j] > key) 
	{
            arr[j + 1] = arr[j];
            j--;
        }
        
        arr[j + 1] = key;
    }
}

int main() 
    {
    	int n;
    	printf("Enter the number of elements: ");
    	scanf("%d", &n);

    	int *arr = (int *)malloc(n * sizeof(int));
    	printf("Enter the elements:\n");
    	for (int i = 0; i < n; i++) 
	{
        	scanf("%d", &arr[i]);
    	}

    // Sorting
    insertionSort(arr, n);

    // Writing sorted data to a temporary file
    FILE *tempFile = fopen("temp_file.txt", "w");
    if (tempFile == NULL) 
    {
        perror("Error creating temporary file");
        return 1;
    }

    for (int i = 0; i < n; i++) 
    {
        fprintf(tempFile, "%d\n", arr[i]);
    }

    fclose(tempFile);

    printf("Sorting process completed and data saved to temporary file.\n");

    free(arr);

    return 0;
}
--------------------------------------------------------------------------------------
Process 2 (Input Process):

#include <stdio.h>
#include <stdlib.h>

int main() 
	{
          int n;
          printf("Enter the number of elements: ");
          scanf("%d", &n);

          int *arr = (int *)malloc(n * sizeof(int));
          printf("Enter the elements:\n");
          for (int i = 0; i < n; i++) 
          {
            scanf("%d", &arr[i]);
          }

         // Writing unsorted data to a temporary file
        FILE *tempFile = fopen("temp_file.txt", "w");
        if (tempFile == NULL) 
	{
          perror("Error creating temporary file");
          return 1;
        }

    	for (int i = 0; i < n; i++) 
	{
          fprintf(tempFile, "%d\n", arr[i]);
        }

        fclose(tempFile);

        printf("Input process completed and data saved to temporary file.\n");

        free(arr);

        return 0;
     }
-------------------------------------------------------------
